{"ast":null,"code":"var _jsxFileName = \"/Users/dario.maddaluno/Documents/Dev/MAAP_VertexDemo/Financial/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const loadData = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/load_data\", {\n        method: \"POST\"\n      });\n      const result = await response.json();\n      console.log(result); // Log the full response to check for any issues\n      setMessage(result.message); // Show success or failure message\n    } catch (error) {\n      console.error(\"Error:\", error); // Log any errors that occur\n      setMessage(\"Failed to update data. Please try again.\");\n    }\n  };\n  const askQuestion = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/ask_question/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          question\n        })\n      });\n      const result = await response.json();\n      if (result.answer) {\n        setAnswer(result.answer);\n      } else {\n        setAnswer(\"Sorry, I couldn't find an answer.\");\n      }\n    } catch (error) {\n      setAnswer(\"Failed to get the answer. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadData,\n      children: \"Load Data into MongoDB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"+y9JUsexXWOiYvhuV+tQva8DjvA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","message","setMessage","question","setQuestion","answer","setAnswer","loadData","response","fetch","method","result","json","console","log","error","askQuestion","headers","body","JSON","stringify","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dario.maddaluno/Documents/Dev/MAAP_VertexDemo/Financial/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\n\nfunction App() {\n    const [message, setMessage] = useState(\"\");\n    const [question, setQuestion] = useState(\"\");\n    const [answer, setAnswer] = useState(\"\");\n\n    const loadData = async () => {\n        try {\n            const response = await fetch(\"http://127.0.0.1:8000/load_data\", {\n                method: \"POST\",\n            });\n            const result = await response.json();\n            console.log(result);  // Log the full response to check for any issues\n            setMessage(result.message);  // Show success or failure message\n        } catch (error) {\n            console.error(\"Error:\", error);  // Log any errors that occur\n            setMessage(\"Failed to update data. Please try again.\");\n        }\n    };\n    const askQuestion = async () => {\n        try {\n            const response = await fetch(\"http://127.0.0.1:8000/ask_question/\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ question }),\n            });\n            const result = await response.json();\n            if (result.answer) {\n                setAnswer(result.answer);\n            } else {\n                setAnswer(\"Sorry, I couldn't find an answer.\");\n            }\n        } catch (error) {\n            setAnswer(\"Failed to get the answer. Please try again.\");\n        }\n    };\n    return (\n        <div className=\"App\">\n            <button onClick={loadData}>Load Data into MongoDB</button>\n            <p>{message}</p> {/* Display the message from the API response */}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC5DC,MAAM,EAAE;MACZ,CAAC,CAAC;MACF,MAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC,CAAC,CAAE;MACtBT,UAAU,CAACS,MAAM,CAACV,OAAO,CAAC,CAAC,CAAE;IACjC,CAAC,CAAC,OAAOc,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC,CAAE;MACjCb,UAAU,CAAC,0CAA0C,CAAC;IAC1D;EACJ,CAAC;EACD,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdO,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEjB;QAAS,CAAC;MACrC,CAAC,CAAC;MACF,MAAMQ,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACpC,IAAID,MAAM,CAACN,MAAM,EAAE;QACfC,SAAS,CAACK,MAAM,CAACN,MAAM,CAAC;MAC5B,CAAC,MAAM;QACHC,SAAS,CAAC,mCAAmC,CAAC;MAClD;IACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZT,SAAS,CAAC,6CAA6C,CAAC;IAC5D;EACJ,CAAC;EACD,oBACIR,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBxB,OAAA;MAAQyB,OAAO,EAAEhB,QAAS;MAAAe,QAAA,EAAC;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1D7B,OAAA;MAAAwB,QAAA,EAAIrB;IAAO;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEd;AAAC3B,EAAA,CA3CQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}