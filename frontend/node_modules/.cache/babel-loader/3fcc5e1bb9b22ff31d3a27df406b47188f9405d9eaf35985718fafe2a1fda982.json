{"ast":null,"code":"var _jsxFileName = \"/Users/dario.maddaluno/Documents/Dev/MAAP_VertexDemo/Financial/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [statusMessage, setStatusMessage] = useState(\"\"); // Status for loading data\n  const [messages, setMessages] = useState([]); // Chat history\n  const [input, setInput] = useState(\"\"); // User input\n  const [data, setData] = useState(null); // Store loaded data\n\n  const loadData = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/load_client\", {\n        method: \"POST\"\n      });\n      const result = await response.json();\n      console.log(result); // Log the full response to check for any issues\n      print(result.message);\n      setMessage(result.message); // Show success or failure message\n      setData(result.data); // Set the loaded data to state (assuming `data` is part of the response)\n    } catch (error) {\n      console.error(\"Error:\", error); // Log any errors that occur\n      setMessage(\"Failed to update data. Please try again.\");\n    }\n  };\n  const askQuestion = async () => {\n    if (!input.trim()) return; // Prevent sending empty input\n\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]); // Add user's message to the chat\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/ask_question/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          question: input\n        })\n      });\n      const result = await response.json();\n      const botMessage = {\n        sender: \"bot\",\n        text: result.answer || \"Sorry, I couldn't find an answer.\"\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]); // Add bot's response to the chat\n    } catch (error) {\n      const errorMessage = {\n        sender: \"bot\",\n        text: \"Failed to process your question. Please try again.\"\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    }\n    setInput(\"\"); // Clear the input field\n  };\n  const clearChat = () => {\n    setMessages([]); // Clear chat messages\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadData,\n      className: \"load-data-btn\",\n      children: \"Load Data into MongoDB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === \"user\" ? \"user\" : \"bot\"}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Ask a question about the data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: askQuestion,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearChat,\n      className: \"clear-chat-btn\",\n      children: \"Clear Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"B6W1s3Z8ck5/IxLAKoVY7BTDj5g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","message","setMessage","question","setQuestion","answer","setAnswer","statusMessage","setStatusMessage","messages","setMessages","input","setInput","data","setData","loadData","response","fetch","method","result","json","console","log","print","error","askQuestion","trim","userMessage","sender","text","prevMessages","headers","body","JSON","stringify","botMessage","errorMessage","clearChat","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/dario.maddaluno/Documents/Dev/MAAP_VertexDemo/Financial/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\n\nfunction App() {\n    const [message, setMessage] = useState(\"\");\n    const [question, setQuestion] = useState(\"\");\n    const [answer, setAnswer] = useState(\"\");\n    const [statusMessage, setStatusMessage] = useState(\"\"); // Status for loading data\n    const [messages, setMessages] = useState([]); // Chat history\n    const [input, setInput] = useState(\"\"); // User input\n    const [data, setData] = useState(null); // Store loaded data\n\n    const loadData = async () => {\n        try {\n            const response = await fetch(\"http://127.0.0.1:8000/load_client\", {\n                method: \"POST\",\n            });\n            const result = await response.json();\n            console.log(result);  // Log the full response to check for any issues\n            print(result.message)\n            setMessage(result.message);  // Show success or failure message\n            setData(result.data);  // Set the loaded data to state (assuming `data` is part of the response)\n        } catch (error) {\n            console.error(\"Error:\", error);  // Log any errors that occur\n            setMessage(\"Failed to update data. Please try again.\");\n        }\n    };\n\n    \n    \n    const askQuestion = async () => {\n        if (!input.trim()) return; // Prevent sending empty input\n\n        const userMessage = { sender: \"user\", text: input };\n        setMessages((prevMessages) => [...prevMessages, userMessage]); // Add user's message to the chat\n\n        try {\n            const response = await fetch(\"http://127.0.0.1:8000/ask_question/\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ question: input }),\n            });\n            const result = await response.json();\n\n            const botMessage = {\n                sender: \"bot\",\n                text: result.answer || \"Sorry, I couldn't find an answer.\",\n            };\n            setMessages((prevMessages) => [...prevMessages, botMessage]); // Add bot's response to the chat\n        } catch (error) {\n            const errorMessage = {\n                sender: \"bot\",\n                text: \"Failed to process your question. Please try again.\",\n            };\n            setMessages((prevMessages) => [...prevMessages, errorMessage]);\n        }\n\n        setInput(\"\"); // Clear the input field\n    };\n    const clearChat = () => {\n        setMessages([]); // Clear chat messages\n    };\n    return (\n        <div className=\"App\">\n            {/* Load Data Button */}\n            <button onClick={loadData} className=\"load-data-btn\">\n                Load Data into MongoDB\n            </button>\n            <p className=\"status-message\">{statusMessage}</p>\n\n            {/* Chatbox for ask_question */}\n            <div className=\"chatbox\">\n                {messages.map((msg, index) => (\n                    <div\n                        key={index}\n                        className={`message ${\n                            msg.sender === \"user\" ? \"user\" : \"bot\"\n                        }`}\n                    >\n                        {msg.text}\n                    </div>\n                ))}\n            </div>\n\n            {/* Input Area */}\n            <div className=\"input-area\">\n                <input\n                    type=\"text\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    placeholder=\"Ask a question about the data\"\n                />\n                <button onClick={askQuestion}>Send</button>\n            </div>\n            {/* Clear Chat Button */}\n            <button onClick={clearChat} className=\"clear-chat-btn\">\n                Clear Chat\n            </button>\n        </div>\n        );\n    }\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}